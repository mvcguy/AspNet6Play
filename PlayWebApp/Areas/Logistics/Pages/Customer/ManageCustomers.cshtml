@page

@model ManageCustomersModel

@{
    ViewData["Title"] = "Manage Customers";
    ViewData["SelectedPage"] = "ManageCustomer";
}

@section ToolBar{
<div class="row">
    <partial name="_ActionBar" />

    <div class="row g-1">
        <div id="serverMessages">

        </div>
    </div>
</div>
}


@if (Model != null)
{
    <form class="row g-1" id="frmCustomer" method="post">
        <div class="col-12">
            <label asp-for="CustomerVm.RefNbr"></label>
            <input asp-for="CustomerVm.RefNbr" class="form-control" aria-required="true" />
            <span asp-validation-for="CustomerVm.RefNbr" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="CustomerVm.Name"></label>
            <input asp-for="CustomerVm.Name" class="form-control" aria-required="true" />
            <span asp-validation-for="CustomerVm.Name" class="text-danger"></span>
        </div>

        <ul class="nav nav-tabs" id="tabsCustomer" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="tabCustomerDetails" data-bs-toggle="tab"
                data-bs-target="#tabCustomerItemsContent" type="button" role="tab"
                aria-controls="tabCustomerItemsContent" aria-selected="true">Shipping details</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="tabCustomerItemsContent" role="tabpanel" aria-labelledby="tabPrices">
                <div class="" style="min-height: 250px;">
                    <table class="table table-bordered resizable" id="customerAddresses">
                        <thead>
                            <tr>
                                <th colspan="6">
                                    <button type="button" class="btn btn-sm btn-outline-primary" id="btnAddRow">+</button>
                                    <button type="button" class="btn btn-sm btn-outline-danger" id="btnDeleteRow">-</button>
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>

    </form>

}


@section Scripts {
<partial name="_ValidationScriptsPartial" />

<script>

    $(document).ready(function () {
        // >> cols
        var colFor = function (name, dataType, width, propName, key) {
            return { name, dataType, width, propName, keyColumn: key };
        };

        var cols = [];
        cols.push(colFor("Reference", "text", "80px", "refNbr", true));
        cols.push(colFor("Default", "boolean", "60px", "isDefault", false));
        cols.push(colFor("Street", "text", "220px", "streetAddress", false));
        cols.push(colFor("Postal code", "number", "80px", "postalCode", false));
        cols.push(colFor("City", "text", "120px", "city", false));
        cols.push(colFor("Country", "text", "120px", "country", false));
        // << cols

        // >> datasource

        var initData = @Json.Serialize(Model.CustomerVm.Addresses);

        var dataSource = {
            isRemote: true,
            url: 'https://localhost:7096/api/v1/Customers/address',
            data: initData,
            dataSourceName: 'addresses'
        };

        // << datasource

        var addressesGrid = new gridNavigationService({
            gridId: "customerAddresses",
            cols,
            dataSource
        });

        addressesGrid.bind();

        $('#btnSaveGrid').on('click', function () {
            var rows = addressesGrid.getDrityRows();
            console.log(rows);
        });

        $('#btnAddRow').on('click', function () {
            addressesGrid.addNewRowToGrid();
        });

        $('#btnDeleteRow').on('click', function () {
            addressesGrid.deleteRow();
        });

        addressesGrid.registerCallbacks();

        //
        // make the grid resixeable
        //
        var tables = document.getElementsByClassName('resizable');
        for (var i = 0; i < tables.length; i++) {
            resizableGrid(tables[i]);
        }
    });

</script>

<script>

    $(document).ready(function () {
        var srv = new persistenceService({
            url: "https://localhost:7096/api/v1/Customers/",
            formId: "frmCustomer",
            idField: 'CustomerVm_RefNbr',
            msgContainer: "serverMessages",
            getIdCallback: function () {
                return $('#CustomerVm_RefNbr').val();
            },
            nextEndpoint: function () {
                return $('#CustomerVm_RefNbr').val() + "/next";
            },
            prevEndpoint: function () {
                return $('#CustomerVm_RefNbr').val() + "/previous";
            },
            onAdd: function (id) {
                $('#CustomerVm_RefNbr').val('');
                $('#CustomerVm_Name').val('');

                if (id && id !== '')
                    $('#CustomerVm_RefNbr').val(id);

            },
            lastEndpoint: "last",
            firstEndpoint: "first",
            onGetResponse: function (response) {
                $('#CustomerVm_RefNbr').val(response.refNbr);
                $('#CustomerVm_Name').val(response.name);
            },
            deleteEndpoint: function () {
                return $('#CustomerVm_RefNbr').val();
            },
            onDeleteResponse: function (response) {

            },
            onSaveResponse: function (response) {

            },
        });
        srv.registerHandlers();
        srv.registerCallbacks();
        srv.dumpParams();
    });

</script>

}