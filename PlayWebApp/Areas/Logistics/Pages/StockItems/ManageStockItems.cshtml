@page
@model ManageStockItemsModel
@{
    ViewData["Title"] = "Stock items";
    ViewData["SelectedPage"] = "ManageStock";
}

@{
    //ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = "xxx";
}

@section ToolBar{
<div class="row">
    <partial name="_ActionBar" />

    <div class="row g-1">
        <div id="serverMessages">

        </div>
    </div>
</div>
}

@if (Model != null)
{
    <form class="row g-1" id="frmStockItems" method="post">
        <div class="col-12">
            <label asp-for="StockItemVm.ItemDisplayId"></label>
            <input asp-for="StockItemVm.ItemDisplayId" class="form-control" aria-required="true" />
            <span asp-validation-for="StockItemVm.ItemDisplayId" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="StockItemVm.ItemDescription"></label>
            <input asp-for="StockItemVm.ItemDescription" class="form-control" aria-required="true" />
            <span asp-validation-for="StockItemVm.ItemDescription" class="text-danger"></span>
        </div>

        <ul class="nav nav-tabs" id="tabsStockItem" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="tabPrices" data-bs-toggle="tab" data-bs-target="#tabPricesContent"
                type="button" role="tab" aria-controls="tabPricesContent" aria-selected="true">Prices</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="tabSuppliers" data-bs-toggle="tab" data-bs-target="#tabSuppliersContent"
                type="button" role="tab" aria-controls="tabSuppliersContent" aria-selected="false">Suppliers</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="tabPricesContent" role="tabpanel" aria-labelledby="tabPrices">
                <div class="row">
                    <div class="col-sm-6">Display ID</div>
                    <div class="col-sm-6">Description</div>
                </div>
                @foreach (var item in Model.StockItemsList)
                {
                    <div class="row">
                        <div class="col-sm-6">@item.RefNbr</div>
                        <div class="col-sm-6">@item.Description</div>
                    </div>
                }
            </div>
            <div class="tab-pane fade" id="tabSuppliersContent" role="tabpanel" aria-labelledby="tabSuppliers">Stock item
                suppliers</div>
        </div>

    </form>

}


@section Scripts {
<partial name="_ValidationScriptsPartial" />

<script>

    $(document).ready(function () {
        var srv = new persistenceService({
            url: "https://localhost:7096/api/v1/StockItems/",
            formId: "frmStockItems",
            idField: 'StockItemVm_ItemDisplayId',
            msgContainer: "serverMessages",
            getIdCallback: function () {
                return $('#StockItemVm_ItemDisplayId').val();
            },
            nextEndpoint: function () {
                return $('#StockItemVm_ItemDisplayId').val() + "/next";
            },
            prevEndpoint: function () {
                return $('#StockItemVm_ItemDisplayId').val() + "/previous";
            },
            onAdd: function (id) {
                $('#StockItemVm_ItemDisplayId').val('');
                $('#StockItemVm_ItemDescription').val('');

                if (id && id !== '')
                    $('#StockItemVm_ItemDisplayId').val(id);

            },
            lastEndpoint: "last",
            firstEndpoint: "first",
            onGetResponse: function (response) {
                $('#StockItemVm_ItemDisplayId').val(response.itemDisplayId);
                $('#StockItemVm_ItemDescription').val(response.itemDescription);
            },
            deleteEndpoint: function () {
                return $('#StockItemVm_ItemDisplayId').val();
            },
            onDeleteResponse: function (response) {

            },
            onSaveResponse: function (response) {

            },
        });
        srv.registerHandlers();
        srv.dumpParams();
    });

</script>

}
